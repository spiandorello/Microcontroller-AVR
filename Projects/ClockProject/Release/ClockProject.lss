
ClockProject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000010  00800100  0000041e  000004b2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000041e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000010  00800110  00800110  000004c2  2**0
                  ALLOC
  3 .comment      00000011  00000000  00000000  000004c2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000004d4  2**2
                  CONTENTS, READONLY
  5 .debug_info   000005f4  00000000  00000000  00000514  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005a2  00000000  00000000  00000b08  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000001a  00000000  00000000  000010aa  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000208  00000000  00000000  000010c4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3c 00 	jmp	0x78	; 0x78 <__ctors_end>
   4:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
   8:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
   c:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  10:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  14:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  18:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  1c:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  20:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  24:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  28:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  2c:	0c 94 b7 01 	jmp	0x36e	; 0x36e <__vector_11>
  30:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  34:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  38:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  3c:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  40:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__vector_16>
  44:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  48:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  4c:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  50:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  54:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  58:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  5c:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  60:	0c 94 c1 00 	jmp	0x182	; 0x182 <__vector_24>
  64:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>

00000068 <__trampolines_end>:
  68:	40 79       	andi	r20, 0x90	; 144
  6a:	24 30       	cpi	r18, 0x04	; 4
  6c:	19 12       	cpse	r1, r25
  6e:	02 78       	andi	r16, 0x82	; 130
  70:	00 18       	sub	r0, r0
  72:	08 03       	fmul	r16, r16
  74:	46 21       	and	r20, r6
  76:	06 0e       	add	r0, r22

00000078 <__ctors_end>:
  78:	11 24       	eor	r1, r1
  7a:	1f be       	out	0x3f, r1	; 63
  7c:	cf ef       	ldi	r28, 0xFF	; 255
  7e:	d8 e0       	ldi	r29, 0x08	; 8
  80:	de bf       	out	0x3e, r29	; 62
  82:	cd bf       	out	0x3d, r28	; 61

00000084 <__do_copy_data>:
  84:	11 e0       	ldi	r17, 0x01	; 1
  86:	a0 e0       	ldi	r26, 0x00	; 0
  88:	b1 e0       	ldi	r27, 0x01	; 1
  8a:	ee e1       	ldi	r30, 0x1E	; 30
  8c:	f4 e0       	ldi	r31, 0x04	; 4
  8e:	02 c0       	rjmp	.+4      	; 0x94 <__do_copy_data+0x10>
  90:	05 90       	lpm	r0, Z+
  92:	0d 92       	st	X+, r0
  94:	a0 31       	cpi	r26, 0x10	; 16
  96:	b1 07       	cpc	r27, r17
  98:	d9 f7       	brne	.-10     	; 0x90 <__do_copy_data+0xc>

0000009a <__do_clear_bss>:
  9a:	21 e0       	ldi	r18, 0x01	; 1
  9c:	a0 e1       	ldi	r26, 0x10	; 16
  9e:	b1 e0       	ldi	r27, 0x01	; 1
  a0:	01 c0       	rjmp	.+2      	; 0xa4 <.do_clear_bss_start>

000000a2 <.do_clear_bss_loop>:
  a2:	1d 92       	st	X+, r1

000000a4 <.do_clear_bss_start>:
  a4:	a0 32       	cpi	r26, 0x20	; 32
  a6:	b2 07       	cpc	r27, r18
  a8:	e1 f7       	brne	.-8      	; 0xa2 <.do_clear_bss_loop>
  aa:	0e 94 03 02 	call	0x406	; 0x406 <main>
  ae:	0c 94 0d 02 	jmp	0x41a	; 0x41a <_exit>

000000b2 <__bad_interrupt>:
  b2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000b6 <SPI_MasterInit>:
  b6:	8c e2       	ldi	r24, 0x2C	; 44
  b8:	84 b9       	out	0x04, r24	; 4
  ba:	81 e7       	ldi	r24, 0x71	; 113
  bc:	8c bd       	out	0x2c, r24	; 44
  be:	08 95       	ret

000000c0 <SPI_Transmit>:
  c0:	8e bd       	out	0x2e, r24	; 46
  c2:	0d b4       	in	r0, 0x2d	; 45
  c4:	07 fe       	sbrs	r0, 7
  c6:	fd cf       	rjmp	.-6      	; 0xc2 <SPI_Transmit+0x2>
  c8:	8e b5       	in	r24, 0x2e	; 46
  ca:	08 95       	ret

000000cc <SPI_SlaveReceive>:
  cc:	0c 94 60 00 	jmp	0xc0	; 0xc0 <SPI_Transmit>

000000d0 <TWI_Master_Initialise>:
  d0:	84 e8       	ldi	r24, 0x84	; 132
  d2:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
  d6:	8f ef       	ldi	r24, 0xFF	; 255
  d8:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
  dc:	84 e0       	ldi	r24, 0x04	; 4
  de:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
  e2:	08 95       	ret

000000e4 <TWI_Transceiver_Busy>:
  e4:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
  e8:	81 70       	andi	r24, 0x01	; 1
  ea:	08 95       	ret

000000ec <TWI_Get_State_Info>:
  ec:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
  f0:	80 fd       	sbrc	r24, 0
  f2:	fc cf       	rjmp	.-8      	; 0xec <TWI_Get_State_Info>
  f4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
  f8:	08 95       	ret

000000fa <TWI_Start_Transceiver_With_Data>:
  fa:	20 91 bc 00 	lds	r18, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
  fe:	20 fd       	sbrc	r18, 0
 100:	fc cf       	rjmp	.-8      	; 0xfa <TWI_Start_Transceiver_With_Data>
 102:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <TWI_msgSize>
 106:	fc 01       	movw	r30, r24
 108:	20 81       	ld	r18, Z
 10a:	20 93 13 01 	sts	0x0113, r18	; 0x800113 <TWI_buf>
 10e:	20 ff       	sbrs	r18, 0
 110:	09 c0       	rjmp	.+18     	; 0x124 <TWI_Start_Transceiver_With_Data+0x2a>
 112:	10 92 11 01 	sts	0x0111, r1	; 0x800111 <TWI_statusReg>
 116:	88 ef       	ldi	r24, 0xF8	; 248
 118:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 11c:	85 ea       	ldi	r24, 0xA5	; 165
 11e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 122:	08 95       	ret
 124:	fc 01       	movw	r30, r24
 126:	31 96       	adiw	r30, 0x01	; 1
 128:	a4 e1       	ldi	r26, 0x14	; 20
 12a:	b1 e0       	ldi	r27, 0x01	; 1
 12c:	81 e0       	ldi	r24, 0x01	; 1
 12e:	86 17       	cp	r24, r22
 130:	80 f7       	brcc	.-32     	; 0x112 <TWI_Start_Transceiver_With_Data+0x18>
 132:	91 91       	ld	r25, Z+
 134:	9d 93       	st	X+, r25
 136:	8f 5f       	subi	r24, 0xFF	; 255
 138:	fa cf       	rjmp	.-12     	; 0x12e <TWI_Start_Transceiver_With_Data+0x34>

0000013a <TWI_Start_Transceiver>:
 13a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 13e:	80 fd       	sbrc	r24, 0
 140:	fc cf       	rjmp	.-8      	; 0x13a <TWI_Start_Transceiver>
 142:	10 92 11 01 	sts	0x0111, r1	; 0x800111 <TWI_statusReg>
 146:	88 ef       	ldi	r24, 0xF8	; 248
 148:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 14c:	85 ea       	ldi	r24, 0xA5	; 165
 14e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 152:	08 95       	ret

00000154 <TWI_Get_Data_From_Transceiver>:
 154:	20 91 bc 00 	lds	r18, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 158:	20 fd       	sbrc	r18, 0
 15a:	fc cf       	rjmp	.-8      	; 0x154 <TWI_Get_Data_From_Transceiver>
 15c:	20 91 11 01 	lds	r18, 0x0111	; 0x800111 <TWI_statusReg>
 160:	20 fd       	sbrc	r18, 0
 162:	04 c0       	rjmp	.+8      	; 0x16c <TWI_Get_Data_From_Transceiver+0x18>
 164:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <TWI_statusReg>
 168:	81 70       	andi	r24, 0x01	; 1
 16a:	08 95       	ret
 16c:	a3 e1       	ldi	r26, 0x13	; 19
 16e:	b1 e0       	ldi	r27, 0x01	; 1
 170:	28 2f       	mov	r18, r24
 172:	fc 01       	movw	r30, r24
 174:	8e 2f       	mov	r24, r30
 176:	82 1b       	sub	r24, r18
 178:	86 17       	cp	r24, r22
 17a:	a0 f7       	brcc	.-24     	; 0x164 <TWI_Get_Data_From_Transceiver+0x10>
 17c:	8d 91       	ld	r24, X+
 17e:	81 93       	st	Z+, r24
 180:	f9 cf       	rjmp	.-14     	; 0x174 <TWI_Get_Data_From_Transceiver+0x20>

00000182 <__vector_24>:
 182:	1f 92       	push	r1
 184:	0f 92       	push	r0
 186:	0f b6       	in	r0, 0x3f	; 63
 188:	0f 92       	push	r0
 18a:	11 24       	eor	r1, r1
 18c:	2f 93       	push	r18
 18e:	3f 93       	push	r19
 190:	8f 93       	push	r24
 192:	9f 93       	push	r25
 194:	ef 93       	push	r30
 196:	ff 93       	push	r31
 198:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
 19c:	88 32       	cpi	r24, 0x28	; 40
 19e:	01 f1       	breq	.+64     	; 0x1e0 <__vector_24+0x5e>
 1a0:	40 f4       	brcc	.+16     	; 0x1b2 <__vector_24+0x30>
 1a2:	80 31       	cpi	r24, 0x10	; 16
 1a4:	d9 f0       	breq	.+54     	; 0x1dc <__vector_24+0x5a>
 1a6:	88 31       	cpi	r24, 0x18	; 24
 1a8:	d9 f0       	breq	.+54     	; 0x1e0 <__vector_24+0x5e>
 1aa:	88 30       	cpi	r24, 0x08	; 8
 1ac:	09 f0       	breq	.+2      	; 0x1b0 <__vector_24+0x2e>
 1ae:	4a c0       	rjmp	.+148    	; 0x244 <__vector_24+0xc2>
 1b0:	15 c0       	rjmp	.+42     	; 0x1dc <__vector_24+0x5a>
 1b2:	80 34       	cpi	r24, 0x40	; 64
 1b4:	91 f1       	breq	.+100    	; 0x21a <__vector_24+0x98>
 1b6:	28 f4       	brcc	.+10     	; 0x1c2 <__vector_24+0x40>
 1b8:	88 33       	cpi	r24, 0x38	; 56
 1ba:	09 f0       	breq	.+2      	; 0x1be <__vector_24+0x3c>
 1bc:	43 c0       	rjmp	.+134    	; 0x244 <__vector_24+0xc2>
 1be:	85 ea       	ldi	r24, 0xA5	; 165
 1c0:	46 c0       	rjmp	.+140    	; 0x24e <__vector_24+0xcc>
 1c2:	80 35       	cpi	r24, 0x50	; 80
 1c4:	f1 f0       	breq	.+60     	; 0x202 <__vector_24+0x80>
 1c6:	88 35       	cpi	r24, 0x58	; 88
 1c8:	e9 f5       	brne	.+122    	; 0x244 <__vector_24+0xc2>
 1ca:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
 1ce:	e0 91 10 01 	lds	r30, 0x0110	; 0x800110 <__data_end>
 1d2:	f0 e0       	ldi	r31, 0x00	; 0
 1d4:	ed 5e       	subi	r30, 0xED	; 237
 1d6:	fe 4f       	sbci	r31, 0xFE	; 254
 1d8:	80 83       	st	Z, r24
 1da:	2d c0       	rjmp	.+90     	; 0x236 <__vector_24+0xb4>
 1dc:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <__data_end>
 1e0:	e0 91 10 01 	lds	r30, 0x0110	; 0x800110 <__data_end>
 1e4:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <TWI_msgSize>
 1e8:	e8 17       	cp	r30, r24
 1ea:	28 f5       	brcc	.+74     	; 0x236 <__vector_24+0xb4>
 1ec:	81 e0       	ldi	r24, 0x01	; 1
 1ee:	8e 0f       	add	r24, r30
 1f0:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end>
 1f4:	f0 e0       	ldi	r31, 0x00	; 0
 1f6:	ed 5e       	subi	r30, 0xED	; 237
 1f8:	fe 4f       	sbci	r31, 0xFE	; 254
 1fa:	80 81       	ld	r24, Z
 1fc:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
 200:	18 c0       	rjmp	.+48     	; 0x232 <__vector_24+0xb0>
 202:	e0 91 10 01 	lds	r30, 0x0110	; 0x800110 <__data_end>
 206:	81 e0       	ldi	r24, 0x01	; 1
 208:	8e 0f       	add	r24, r30
 20a:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end>
 20e:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
 212:	f0 e0       	ldi	r31, 0x00	; 0
 214:	ed 5e       	subi	r30, 0xED	; 237
 216:	fe 4f       	sbci	r31, 0xFE	; 254
 218:	80 83       	st	Z, r24
 21a:	20 91 10 01 	lds	r18, 0x0110	; 0x800110 <__data_end>
 21e:	30 e0       	ldi	r19, 0x00	; 0
 220:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <TWI_msgSize>
 224:	90 e0       	ldi	r25, 0x00	; 0
 226:	01 97       	sbiw	r24, 0x01	; 1
 228:	28 17       	cp	r18, r24
 22a:	39 07       	cpc	r19, r25
 22c:	14 f4       	brge	.+4      	; 0x232 <__vector_24+0xb0>
 22e:	85 ec       	ldi	r24, 0xC5	; 197
 230:	0e c0       	rjmp	.+28     	; 0x24e <__vector_24+0xcc>
 232:	85 e8       	ldi	r24, 0x85	; 133
 234:	0c c0       	rjmp	.+24     	; 0x24e <__vector_24+0xcc>
 236:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <TWI_statusReg>
 23a:	81 60       	ori	r24, 0x01	; 1
 23c:	80 93 11 01 	sts	0x0111, r24	; 0x800111 <TWI_statusReg>
 240:	84 e9       	ldi	r24, 0x94	; 148
 242:	05 c0       	rjmp	.+10     	; 0x24e <__vector_24+0xcc>
 244:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
 248:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 24c:	84 e0       	ldi	r24, 0x04	; 4
 24e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 252:	ff 91       	pop	r31
 254:	ef 91       	pop	r30
 256:	9f 91       	pop	r25
 258:	8f 91       	pop	r24
 25a:	3f 91       	pop	r19
 25c:	2f 91       	pop	r18
 25e:	0f 90       	pop	r0
 260:	0f be       	out	0x3f, r0	; 63
 262:	0f 90       	pop	r0
 264:	1f 90       	pop	r1
 266:	18 95       	reti

00000268 <get_usart_stream>:
 268:	81 e0       	ldi	r24, 0x01	; 1
 26a:	91 e0       	ldi	r25, 0x01	; 1
 26c:	08 95       	ret

0000026e <USART_Init>:
 26e:	e0 ec       	ldi	r30, 0xC0	; 192
 270:	f0 e0       	ldi	r31, 0x00	; 0
 272:	95 83       	std	Z+5, r25	; 0x05
 274:	84 83       	std	Z+4, r24	; 0x04
 276:	10 82       	st	Z, r1
 278:	88 e9       	ldi	r24, 0x98	; 152
 27a:	81 83       	std	Z+1, r24	; 0x01
 27c:	86 e0       	ldi	r24, 0x06	; 6
 27e:	82 83       	std	Z+2, r24	; 0x02
 280:	08 95       	ret

00000282 <USART_tx>:
 282:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
 286:	95 ff       	sbrs	r25, 5
 288:	fc cf       	rjmp	.-8      	; 0x282 <USART_tx>
 28a:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 28e:	08 95       	ret

00000290 <usart_putchar>:
 290:	0e 94 41 01 	call	0x282	; 0x282 <USART_tx>
 294:	80 e0       	ldi	r24, 0x00	; 0
 296:	90 e0       	ldi	r25, 0x00	; 0
 298:	08 95       	ret

0000029a <USART_rx>:
 29a:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
 29e:	87 ff       	sbrs	r24, 7
 2a0:	fc cf       	rjmp	.-8      	; 0x29a <USART_rx>
 2a2:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 2a6:	08 95       	ret

000002a8 <conv_to_7seg>:
 2a8:	e8 2f       	mov	r30, r24
 2aa:	f0 e0       	ldi	r31, 0x00	; 0
 2ac:	e8 59       	subi	r30, 0x98	; 152
 2ae:	ff 4f       	sbci	r31, 0xFF	; 255
 2b0:	84 91       	lpm	r24, Z
 2b2:	08 95       	ret

000002b4 <__vector_16>:
 2b4:	1f 92       	push	r1
 2b6:	0f 92       	push	r0
 2b8:	0f b6       	in	r0, 0x3f	; 63
 2ba:	0f 92       	push	r0
 2bc:	11 24       	eor	r1, r1
 2be:	2f 93       	push	r18
 2c0:	3f 93       	push	r19
 2c2:	8f 93       	push	r24
 2c4:	9f 93       	push	r25
 2c6:	ef 93       	push	r30
 2c8:	ff 93       	push	r31
 2ca:	8f e0       	ldi	r24, 0x0F	; 15
 2cc:	85 b9       	out	0x05, r24	; 5
 2ce:	20 91 17 01 	lds	r18, 0x0117	; 0x800117 <x.1829>
 2d2:	e2 2f       	mov	r30, r18
 2d4:	f0 e0       	ldi	r31, 0x00	; 0
 2d6:	e8 5e       	subi	r30, 0xE8	; 232
 2d8:	fe 4f       	sbci	r31, 0xFE	; 254
 2da:	81 81       	ldd	r24, Z+1	; 0x01
 2dc:	8b b9       	out	0x0b, r24	; 11
 2de:	31 e0       	ldi	r19, 0x01	; 1
 2e0:	32 0f       	add	r19, r18
 2e2:	30 93 17 01 	sts	0x0117, r19	; 0x800117 <x.1829>
 2e6:	81 e0       	ldi	r24, 0x01	; 1
 2e8:	90 e0       	ldi	r25, 0x00	; 0
 2ea:	01 c0       	rjmp	.+2      	; 0x2ee <__vector_16+0x3a>
 2ec:	88 0f       	add	r24, r24
 2ee:	2a 95       	dec	r18
 2f0:	ea f7       	brpl	.-6      	; 0x2ec <__vector_16+0x38>
 2f2:	80 95       	com	r24
 2f4:	85 b9       	out	0x05, r24	; 5
 2f6:	34 30       	cpi	r19, 0x04	; 4
 2f8:	11 f4       	brne	.+4      	; 0x2fe <__vector_16+0x4a>
 2fa:	10 92 17 01 	sts	0x0117, r1	; 0x800117 <x.1829>
 2fe:	ff 91       	pop	r31
 300:	ef 91       	pop	r30
 302:	9f 91       	pop	r25
 304:	8f 91       	pop	r24
 306:	3f 91       	pop	r19
 308:	2f 91       	pop	r18
 30a:	0f 90       	pop	r0
 30c:	0f be       	out	0x3f, r0	; 63
 30e:	0f 90       	pop	r0
 310:	1f 90       	pop	r1
 312:	18 95       	reti

00000314 <timer0_hardware_init>:
 314:	14 bc       	out	0x24, r1	; 36
 316:	85 e0       	ldi	r24, 0x05	; 5
 318:	85 bd       	out	0x25, r24	; 37
 31a:	ee e6       	ldi	r30, 0x6E	; 110
 31c:	f0 e0       	ldi	r31, 0x00	; 0
 31e:	80 81       	ld	r24, Z
 320:	81 60       	ori	r24, 0x01	; 1
 322:	80 83       	st	Z, r24
 324:	08 95       	ret

00000326 <display_init>:
 326:	0e 94 8a 01 	call	0x314	; 0x314 <timer0_hardware_init>
 32a:	8a b1       	in	r24, 0x0a	; 10
 32c:	8f ef       	ldi	r24, 0xFF	; 255
 32e:	8a b9       	out	0x0a, r24	; 10
 330:	8f e0       	ldi	r24, 0x0F	; 15
 332:	84 b9       	out	0x04, r24	; 4
 334:	08 95       	ret

00000336 <display_write>:
 336:	1f 93       	push	r17
 338:	cf 93       	push	r28
 33a:	df 93       	push	r29
 33c:	18 2f       	mov	r17, r24
 33e:	8f 70       	andi	r24, 0x0F	; 15
 340:	0e 94 54 01 	call	0x2a8	; 0x2a8 <conv_to_7seg>
 344:	c8 e1       	ldi	r28, 0x18	; 24
 346:	d1 e0       	ldi	r29, 0x01	; 1
 348:	89 83       	std	Y+1, r24	; 0x01
 34a:	81 2f       	mov	r24, r17
 34c:	82 95       	swap	r24
 34e:	8f 70       	andi	r24, 0x0F	; 15
 350:	0e 94 54 01 	call	0x2a8	; 0x2a8 <conv_to_7seg>
 354:	8a 83       	std	Y+2, r24	; 0x02
 356:	80 e0       	ldi	r24, 0x00	; 0
 358:	0e 94 54 01 	call	0x2a8	; 0x2a8 <conv_to_7seg>
 35c:	8b 83       	std	Y+3, r24	; 0x03
 35e:	80 e0       	ldi	r24, 0x00	; 0
 360:	0e 94 54 01 	call	0x2a8	; 0x2a8 <conv_to_7seg>
 364:	8c 83       	std	Y+4, r24	; 0x04
 366:	df 91       	pop	r29
 368:	cf 91       	pop	r28
 36a:	1f 91       	pop	r17
 36c:	08 95       	ret

0000036e <__vector_11>:
 36e:	1f 92       	push	r1
 370:	0f 92       	push	r0
 372:	0f b6       	in	r0, 0x3f	; 63
 374:	0f 92       	push	r0
 376:	11 24       	eor	r1, r1
 378:	8f 93       	push	r24
 37a:	ef 93       	push	r30
 37c:	ff 93       	push	r31
 37e:	ed e1       	ldi	r30, 0x1D	; 29
 380:	f1 e0       	ldi	r31, 0x01	; 1
 382:	82 81       	ldd	r24, Z+2	; 0x02
 384:	8f 5f       	subi	r24, 0xFF	; 255
 386:	82 83       	std	Z+2, r24	; 0x02
 388:	ff 91       	pop	r31
 38a:	ef 91       	pop	r30
 38c:	8f 91       	pop	r24
 38e:	0f 90       	pop	r0
 390:	0f be       	out	0x3f, r0	; 63
 392:	0f 90       	pop	r0
 394:	1f 90       	pop	r1
 396:	18 95       	reti

00000398 <timer1_hardware_init>:
 398:	e0 e8       	ldi	r30, 0x80	; 128
 39a:	f0 e0       	ldi	r31, 0x00	; 0
 39c:	10 82       	st	Z, r1
 39e:	8d e0       	ldi	r24, 0x0D	; 13
 3a0:	81 83       	std	Z+1, r24	; 0x01
 3a2:	89 e0       	ldi	r24, 0x09	; 9
 3a4:	9d e3       	ldi	r25, 0x3D	; 61
 3a6:	91 87       	std	Z+9, r25	; 0x09
 3a8:	80 87       	std	Z+8, r24	; 0x08
 3aa:	ee e6       	ldi	r30, 0x6E	; 110
 3ac:	f0 e0       	ldi	r31, 0x00	; 0
 3ae:	81 81       	ldd	r24, Z+1	; 0x01
 3b0:	82 60       	ori	r24, 0x02	; 2
 3b2:	81 83       	std	Z+1, r24	; 0x01
 3b4:	08 95       	ret

000003b6 <clock_init>:
 3b6:	0c 94 cc 01 	jmp	0x398	; 0x398 <timer1_hardware_init>

000003ba <clock_function>:
 3ba:	80 91 1f 01 	lds	r24, 0x011F	; 0x80011f <clockInfo+0x2>
 3be:	8c 33       	cpi	r24, 0x3C	; 60
 3c0:	38 f0       	brcs	.+14     	; 0x3d0 <clock_function+0x16>
 3c2:	10 92 1f 01 	sts	0x011F, r1	; 0x80011f <clockInfo+0x2>
 3c6:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <clockInfo+0x1>
 3ca:	8f 5f       	subi	r24, 0xFF	; 255
 3cc:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <clockInfo+0x1>
 3d0:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <clockInfo+0x1>
 3d4:	8c 33       	cpi	r24, 0x3C	; 60
 3d6:	38 f0       	brcs	.+14     	; 0x3e6 <clock_function+0x2c>
 3d8:	10 92 1e 01 	sts	0x011E, r1	; 0x80011e <clockInfo+0x1>
 3dc:	80 91 1d 01 	lds	r24, 0x011D	; 0x80011d <clockInfo>
 3e0:	8f 5f       	subi	r24, 0xFF	; 255
 3e2:	80 93 1d 01 	sts	0x011D, r24	; 0x80011d <clockInfo>
 3e6:	80 91 1d 01 	lds	r24, 0x011D	; 0x80011d <clockInfo>
 3ea:	88 31       	cpi	r24, 0x18	; 24
 3ec:	10 f0       	brcs	.+4      	; 0x3f2 <clock_function+0x38>
 3ee:	10 92 1d 01 	sts	0x011D, r1	; 0x80011d <clockInfo>
 3f2:	08 95       	ret

000003f4 <get_second>:
 3f4:	80 91 1f 01 	lds	r24, 0x011F	; 0x80011f <clockInfo+0x2>
 3f8:	08 95       	ret

000003fa <get_minutes>:
 3fa:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <clockInfo+0x1>
 3fe:	08 95       	ret

00000400 <get_hours>:
 400:	80 91 1d 01 	lds	r24, 0x011D	; 0x80011d <clockInfo>
 404:	08 95       	ret

00000406 <main>:
 406:	0e 94 93 01 	call	0x326	; 0x326 <display_init>
 40a:	0e 94 db 01 	call	0x3b6	; 0x3b6 <clock_init>
 40e:	78 94       	sei
 410:	0e 94 fa 01 	call	0x3f4	; 0x3f4 <get_second>
 414:	0e 94 9b 01 	call	0x336	; 0x336 <display_write>
 418:	fb cf       	rjmp	.-10     	; 0x410 <main+0xa>

0000041a <_exit>:
 41a:	f8 94       	cli

0000041c <__stop_program>:
 41c:	ff cf       	rjmp	.-2      	; 0x41c <__stop_program>
